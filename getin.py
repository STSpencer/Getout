'''Script to take a numpy isGamma prediction file and a corresponding VERITAS real data file replace it's isGamma prediction with the one generated by a CNN. Written 3/7/2019 by S. Spencer'''


import sys
sys.argv.append('-b-')
import ROOT
import numpy as np
from root_numpy import tree2array, root2array,array2root
from ROOT import gSystem, TFile, TTreeReader
import root_numpy
from rootpy.tree import Tree, TreeModel, FloatCol, IntCol
from rootpy.io import root_open

ROOT.ROOT.EnableImplicitMT()
Root.gROOT.SetBatch(True)
if gSystem.Load("$EVNDISPSYS/lib/libVAnaSum.so"):
    print ("Problem with evndisp")

runfile=''
predfile='prediction.npy'

pred=np.load(predfile)

f_copy = root_open(runfile, "recreate")
# Example from rootpy website


# You may not know the entire model of the original tree but only the branches
# you intend to overwrite, so I am not specifying the model=Event below as an
# example of how to deal with this in general:
tree_copy = Tree("dst")

# Here we specify the buffer for the new tree to use. We use the same buffer as
# the original tree. This creates all the same branches in the new tree but
# their addresses point to the same memory used by the original tree.
tree_copy.set_buffer(tree._buffer, create_branches=True)

# Now loop over the original tree and fill the new tree
for entry in tree:
    # Overwrite a branch value. This changes the value that will be written to
    # the new tree but leaves the value unchanged in the original tree on disk.
    entry.isGamma = arraytoroot(pred)
    # "entry" is actually the buffer, which is shared between both trees.
    tree_copy.Fill()

# tree_copy is now a copy of tree where the "x" branch has been overwritten
# with new values
tree_copy.Write()
f_copy.Close()
f.Close()


